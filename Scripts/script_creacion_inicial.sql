----------------------------------------------------------Creación del esquema--------------------------------------------------------------

USE [GD1C2017]
GO
if not exists (select * from sys.schemas where name = 'OLA_K_ASE')
begin 
	exec('CREATE SCHEMA OLA_K_ASE')
end 
GO
----------------------------------------------------------Creación de la base---------------------------------------------------------------

USE [GD1C2017]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_TURNO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] DROP CONSTRAINT [FK_VIAJES_TURNO_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_RENDICION_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] DROP CONSTRAINT [FK_VIAJES_RENDICION_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_FACTURA_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] DROP CONSTRAINT [FK_VIAJES_FACTURA_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_CLIENTE_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] DROP CONSTRAINT [FK_VIAJES_CLIENTE_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_CHOFER_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] DROP CONSTRAINT [FK_VIAJES_CHOFER_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_AUTO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] DROP CONSTRAINT [FK_VIAJES_AUTO_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_USUARIO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]'))
ALTER TABLE [OLA_K_ASE].[ROLES_USUARIOS] DROP CONSTRAINT [FK_USUARIO_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_ROL_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]'))
ALTER TABLE [OLA_K_ASE].[ROLES_USUARIOS] DROP CONSTRAINT [FK_ROL_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_TURNOS_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]'))
ALTER TABLE [OLA_K_ASE].[RENDICIONES] DROP CONSTRAINT [FK_TURNOS_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CHOFER_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]'))
ALTER TABLE [OLA_K_ASE].[RENDICIONES] DROP CONSTRAINT [FK_CHOFER_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_ROLES_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]'))
ALTER TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES] DROP CONSTRAINT [FK_ROLES_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_FUNCIONALIDADES_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]'))
ALTER TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES] DROP CONSTRAINT [FK_FUNCIONALIDADES_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CLIENTE_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FACTURAS]'))
ALTER TABLE [OLA_K_ASE].[FACTURAS] DROP CONSTRAINT [FK_CLIENTE_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CLIENTES_USUARIOS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[CLIENTES]'))
ALTER TABLE [OLA_K_ASE].[CLIENTES] DROP CONSTRAINT [FK_CLIENTES_USUARIOS]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CHOFERES_USUARIOS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[CHOFERES]'))
ALTER TABLE [OLA_K_ASE].[CHOFERES] DROP CONSTRAINT [FK_CHOFERES_USUARIOS]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_TURNO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS_TURNOS] DROP CONSTRAINT [FK_TURNO_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS_TURNOS] DROP CONSTRAINT [FK_AUTOS_ID]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_MARCAS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS] DROP CONSTRAINT [FK_AUTOS_MARCAS]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_CHOFERES]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS] DROP CONSTRAINT [FK_AUTOS_CHOFERES]
GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_USUARIOS_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[USUARIOS] DROP CONSTRAINT [DF_USUARIOS_HABILITADO]
END

GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_TURNOS_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[TURNOS] DROP CONSTRAINT [DF_TURNOS_HABILITADO]
END

GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_ROLES_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[ROLES] DROP CONSTRAINT [DF_ROLES_HABILITADO]
END

GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_FACTURAS_IMPORTE]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[FACTURAS] DROP CONSTRAINT [DF_FACTURAS_IMPORTE]
END

GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_CLIENTES_HABIILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[CLIENTES] DROP CONSTRAINT [DF_CLIENTES_HABIILITADO]
END

GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_CHOFERES_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[CHOFERES] DROP CONSTRAINT [DF_CHOFERES_HABILITADO]
END

GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_AUTOS_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[AUTOS] DROP CONSTRAINT [DF_AUTOS_HABILITADO]
END

GO
/****** Object:  Table [OLA_K_ASE].[VIAJES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[VIAJES]
GO
/****** Object:  Table [OLA_K_ASE].[USUARIOS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[USUARIOS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[USUARIOS]
GO
/****** Object:  Table [OLA_K_ASE].[TURNOS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[TURNOS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[TURNOS]
GO
/****** Object:  Table [OLA_K_ASE].[ROLES_USUARIOS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[ROLES_USUARIOS]
GO
/****** Object:  Table [OLA_K_ASE].[ROLES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[ROLES]
GO
/****** Object:  Table [OLA_K_ASE].[RENDICIONES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[RENDICIONES]
GO
/****** Object:  Table [OLA_K_ASE].[MARCAS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[MARCAS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[MARCAS]
GO
/****** Object:  Table [OLA_K_ASE].[FUNCIONALIDADES_ROLES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES]
GO
/****** Object:  Table [OLA_K_ASE].[FUNCIONALIDADES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[FUNCIONALIDADES]
GO
/****** Object:  Table [OLA_K_ASE].[FACTURAS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FACTURAS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[FACTURAS]
GO
/****** Object:  Table [OLA_K_ASE].[CLIENTES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[CLIENTES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[CLIENTES]
GO
/****** Object:  Table [OLA_K_ASE].[CHOFERES]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[CHOFERES]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[CHOFERES]
GO
/****** Object:  Table [OLA_K_ASE].[AUTOS_TURNOS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[AUTOS_TURNOS]
GO
/****** Object:  Table [OLA_K_ASE].[AUTOS]    Script Date: 5/21/2017 8:58:03 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[AUTOS]
GO
/****** Object:  Table [OLA_K_ASE].[AUTOS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[AUTOS](
	[ID_AUTO] [int] IDENTITY(1,1) NOT NULL,
	[MARCA_ID] [int] NOT NULL,
	[MODELO] [varchar](255) NOT NULL,
	[PATENTE] [varchar](10) NOT NULL,
	[LICENCIA] [varchar](26) NULL,
	[RODADO] [varchar](10) NULL,
	[HABILITADO] [bit] NOT NULL,
	[CHOFER_ID] [int] NOT NULL,
 CONSTRAINT [PK_AUTOS] PRIMARY KEY CLUSTERED 
(
	[ID_AUTO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [PATENTE_UNIQUE_AUTOS] UNIQUE NONCLUSTERED 
(
	[ID_AUTO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[AUTOS_TURNOS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[AUTOS_TURNOS](
	[TURNO_ID] [int] NOT NULL,
	[AUTO_ID] [int] NOT NULL,
 CONSTRAINT [PK_AUTOS_TURNOS] PRIMARY KEY CLUSTERED 
(
	[TURNO_ID] ASC,
	[AUTO_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [OLA_K_ASE].[CHOFERES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[CHOFERES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[CHOFERES](
	[ID_CHOFER] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [varchar](255) NOT NULL,
	[APELLIDO] [varchar](255) NOT NULL,
	[DNI] [numeric](18, 0) NOT NULL,
	[DIRECCION] [varchar](255) NOT NULL,
	[TELEFONO] [numeric](18, 0) NOT NULL,
	[MAIL] [varchar](255) NOT NULL,
	[FECHA_NAC] [datetime] NOT NULL,
	[USUARIO_ID] [int] NULL,
	[HABILITADO] [bit] NOT NULL,
 CONSTRAINT [PK_CHOFERES] PRIMARY KEY CLUSTERED 
(
	[ID_CHOFER] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[CLIENTES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[CLIENTES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[CLIENTES](
	[ID_CLIENTE] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [varchar](255) NOT NULL,
	[APELLIDO] [varchar](255) NOT NULL,
	[DNI] [numeric](18, 0) NOT NULL,
	[DIRECCION] [varchar](255) NOT NULL,
	[MAIL] [varchar](255) NULL,
	[TELEFONO] [numeric](18, 0) NOT NULL,
	[FECHA_NAC] [datetime] NOT NULL,
	[HABIILITADO] [bit] NOT NULL,
	[USUARIO_ID] [int] NULL,
	[COD_POSTAL] [int] NULL,
 CONSTRAINT [PK_CLIENTES] PRIMARY KEY CLUSTERED 
(
	[ID_CLIENTE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[FACTURAS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FACTURAS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[FACTURAS](
	[ID_FACTURA] [int] IDENTITY(1,1) NOT NULL,
	[CLIENTE_ID] [int] NOT NULL,
	[FECHA_INICIO] [datetime] NOT NULL,
	[FECHA_FIN] [datetime] NOT NULL,
	[FECHA_FACT] [datetime] NOT NULL,
	[IMPORTE] [numeric](18, 2) NOT NULL,
	[NUMERO] [numeric](18, 0) NOT NULL,
 CONSTRAINT [PK_FACTURAS] PRIMARY KEY CLUSTERED 
(
	[ID_FACTURA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [OLA_K_ASE].[FUNCIONALIDADES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[FUNCIONALIDADES](
	[ID_FUNC] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [varchar](30) NOT NULL,
 CONSTRAINT [PK_FUNCIONALIDADES] PRIMARY KEY CLUSTERED 
(
	[ID_FUNC] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[FUNCIONALIDADES_ROLES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES](
	[FUNCIONALIDADES_ID] [int] NOT NULL,
	[ROLES_ID] [int] NOT NULL,
 CONSTRAINT [PK_FUNCIONALIDADES_ROLES] PRIMARY KEY CLUSTERED 
(
	[FUNCIONALIDADES_ID] ASC,
	[ROLES_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [OLA_K_ASE].[MARCAS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[MARCAS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[MARCAS](
	[ID_MARCA] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [varchar](30) NOT NULL,
 CONSTRAINT [PK_MARCAS] PRIMARY KEY CLUSTERED 
(
	[ID_MARCA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[RENDICIONES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[RENDICIONES](
	[ID_RENDICION] [int] IDENTITY(1,1) NOT NULL,
	[TURNO_ID] [int] NOT NULL,
	[NUMERO] [numeric](18, 0) NOT NULL,
	[FECHA] [datetime] NOT NULL,
	[IMPORTE] [numeric](18, 2) NOT NULL,
	[CHOFER_ID] [int] NOT NULL,
 CONSTRAINT [PK_RENDICIONES] PRIMARY KEY CLUSTERED 
(
	[ID_RENDICION] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [OLA_K_ASE].[ROLES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[ROLES](
	[ID_ROL] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [varchar](30) NOT NULL,
	[HABILITADO] [bit] NOT NULL,
 CONSTRAINT [PK_ROLES] PRIMARY KEY CLUSTERED 
(
	[ID_ROL] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[ROLES_USUARIOS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[ROLES_USUARIOS](
	[USUARIO_ID] [int] NOT NULL,
	[ROLES_ID] [int] NOT NULL,
 CONSTRAINT [PK_ROLES_USUARIOS] PRIMARY KEY CLUSTERED 
(
	[USUARIO_ID] ASC,
	[ROLES_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [OLA_K_ASE].[TURNOS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[TURNOS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[TURNOS](
	[ID_TURNO] [int] IDENTITY(1,1) NOT NULL,
	[HORA_INICIO] [numeric](18, 0) NOT NULL,
	[HORA_FIN] [numeric](18, 0) NOT NULL,
	[DESCRIPCION] [varchar](255) NOT NULL,
	[VALOR_KM] [numeric](18, 2) NOT NULL,
	[PRECIO_BASE] [numeric](18, 2) NOT NULL,
	[HABILITADO] [bit] NOT NULL,
 CONSTRAINT [PK_TURNOS] PRIMARY KEY CLUSTERED 
(
	[ID_TURNO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[USUARIOS]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[USUARIOS]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[USUARIOS](
	[ID_USUARIO] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [varchar](30) NOT NULL,
	[PASSWORD] [binary](32) NOT NULL,
	[CANT_FALLAS] [smallint] NOT NULL,
	[HABILITADO] [bit] NOT NULL,
 CONSTRAINT [PK_USUARIOS] PRIMARY KEY CLUSTERED 
(
	[ID_USUARIO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [OLA_K_ASE].[VIAJES]    Script Date: 5/21/2017 8:58:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]') AND type in (N'U'))
BEGIN
CREATE TABLE [OLA_K_ASE].[VIAJES](
	[ID_VIAJE] [int] IDENTITY(1,1) NOT NULL,
	[FECHA_INICIO] [datetime] NOT NULL,
	[FECHA_FIN] [datetime] NULL,
	[CANTIDAD_KM] [numeric](18, 0) NOT NULL,
	[CHOFER_ID] [int] NOT NULL,
	[CLIENTE_ID] [int] NOT NULL,
	[AUTO_ID] [int] NOT NULL,
	[TURNO_ID] [int] NOT NULL,
	[RENDICION_ID] [int] NULL,
	[FACTURA_ID] [int] NULL,
 CONSTRAINT [PK_VIAJES] PRIMARY KEY CLUSTERED 
(
	[ID_VIAJE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_AUTOS_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[AUTOS] ADD  CONSTRAINT [DF_AUTOS_HABILITADO]  DEFAULT ((1)) FOR [HABILITADO]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_CHOFERES_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[CHOFERES] ADD  CONSTRAINT [DF_CHOFERES_HABILITADO]  DEFAULT ((1)) FOR [HABILITADO]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_CLIENTES_HABIILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[CLIENTES] ADD  CONSTRAINT [DF_CLIENTES_HABIILITADO]  DEFAULT ((1)) FOR [HABIILITADO]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_FACTURAS_IMPORTE]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[FACTURAS] ADD  CONSTRAINT [DF_FACTURAS_IMPORTE]  DEFAULT ((0)) FOR [IMPORTE]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_ROLES_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[ROLES] ADD  CONSTRAINT [DF_ROLES_HABILITADO]  DEFAULT ((1)) FOR [HABILITADO]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_TURNOS_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[TURNOS] ADD  CONSTRAINT [DF_TURNOS_HABILITADO]  DEFAULT ((1)) FOR [HABILITADO]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[OLA_K_ASE].[DF_USUARIOS_HABILITADO]') AND type = 'D')
BEGIN
ALTER TABLE [OLA_K_ASE].[USUARIOS] ADD  CONSTRAINT [DF_USUARIOS_HABILITADO]  DEFAULT ((1)) FOR [HABILITADO]
END

GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_CHOFERES]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS]  WITH CHECK ADD  CONSTRAINT [FK_AUTOS_CHOFERES] FOREIGN KEY([CHOFER_ID])
REFERENCES [OLA_K_ASE].[CHOFERES] ([ID_CHOFER])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_CHOFERES]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS] CHECK CONSTRAINT [FK_AUTOS_CHOFERES]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_MARCAS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS]  WITH CHECK ADD  CONSTRAINT [FK_AUTOS_MARCAS] FOREIGN KEY([MARCA_ID])
REFERENCES [OLA_K_ASE].[MARCAS] ([ID_MARCA])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_MARCAS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS] CHECK CONSTRAINT [FK_AUTOS_MARCAS]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS_TURNOS]  WITH CHECK ADD  CONSTRAINT [FK_AUTOS_ID] FOREIGN KEY([AUTO_ID])
REFERENCES [OLA_K_ASE].[AUTOS] ([ID_AUTO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_AUTOS_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS_TURNOS] CHECK CONSTRAINT [FK_AUTOS_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_TURNO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS_TURNOS]  WITH CHECK ADD  CONSTRAINT [FK_TURNO_ID] FOREIGN KEY([TURNO_ID])
REFERENCES [OLA_K_ASE].[TURNOS] ([ID_TURNO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_TURNO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[AUTOS_TURNOS]'))
ALTER TABLE [OLA_K_ASE].[AUTOS_TURNOS] CHECK CONSTRAINT [FK_TURNO_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CHOFERES_USUARIOS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[CHOFERES]'))
ALTER TABLE [OLA_K_ASE].[CHOFERES]  WITH CHECK ADD  CONSTRAINT [FK_CHOFERES_USUARIOS] FOREIGN KEY([USUARIO_ID])
REFERENCES [OLA_K_ASE].[USUARIOS] ([ID_USUARIO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CHOFERES_USUARIOS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[CHOFERES]'))
ALTER TABLE [OLA_K_ASE].[CHOFERES] CHECK CONSTRAINT [FK_CHOFERES_USUARIOS]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CLIENTES_USUARIOS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[CLIENTES]'))
ALTER TABLE [OLA_K_ASE].[CLIENTES]  WITH CHECK ADD  CONSTRAINT [FK_CLIENTES_USUARIOS] FOREIGN KEY([USUARIO_ID])
REFERENCES [OLA_K_ASE].[USUARIOS] ([ID_USUARIO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CLIENTES_USUARIOS]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[CLIENTES]'))
ALTER TABLE [OLA_K_ASE].[CLIENTES] CHECK CONSTRAINT [FK_CLIENTES_USUARIOS]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CLIENTE_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FACTURAS]'))
ALTER TABLE [OLA_K_ASE].[FACTURAS]  WITH CHECK ADD  CONSTRAINT [FK_CLIENTE_ID] FOREIGN KEY([CLIENTE_ID])
REFERENCES [OLA_K_ASE].[CLIENTES] ([ID_CLIENTE])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CLIENTE_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FACTURAS]'))
ALTER TABLE [OLA_K_ASE].[FACTURAS] CHECK CONSTRAINT [FK_CLIENTE_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_FUNCIONALIDADES_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]'))
ALTER TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES]  WITH CHECK ADD  CONSTRAINT [FK_FUNCIONALIDADES_ID] FOREIGN KEY([FUNCIONALIDADES_ID])
REFERENCES [OLA_K_ASE].[FUNCIONALIDADES] ([ID_FUNC])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_FUNCIONALIDADES_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]'))
ALTER TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES] CHECK CONSTRAINT [FK_FUNCIONALIDADES_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_ROLES_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]'))
ALTER TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES]  WITH CHECK ADD  CONSTRAINT [FK_ROLES_ID] FOREIGN KEY([ROLES_ID])
REFERENCES [OLA_K_ASE].[ROLES] ([ID_ROL])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_ROLES_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[FUNCIONALIDADES_ROLES]'))
ALTER TABLE [OLA_K_ASE].[FUNCIONALIDADES_ROLES] CHECK CONSTRAINT [FK_ROLES_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CHOFER_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]'))
ALTER TABLE [OLA_K_ASE].[RENDICIONES]  WITH CHECK ADD  CONSTRAINT [FK_CHOFER_ID] FOREIGN KEY([CHOFER_ID])
REFERENCES [OLA_K_ASE].[CHOFERES] ([ID_CHOFER])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_CHOFER_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]'))
ALTER TABLE [OLA_K_ASE].[RENDICIONES] CHECK CONSTRAINT [FK_CHOFER_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_TURNOS_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]'))
ALTER TABLE [OLA_K_ASE].[RENDICIONES]  WITH CHECK ADD  CONSTRAINT [FK_TURNOS_ID] FOREIGN KEY([TURNO_ID])
REFERENCES [OLA_K_ASE].[TURNOS] ([ID_TURNO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_TURNOS_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[RENDICIONES]'))
ALTER TABLE [OLA_K_ASE].[RENDICIONES] CHECK CONSTRAINT [FK_TURNOS_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_ROL_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]'))
ALTER TABLE [OLA_K_ASE].[ROLES_USUARIOS]  WITH CHECK ADD  CONSTRAINT [FK_ROL_ID] FOREIGN KEY([ROLES_ID])
REFERENCES [OLA_K_ASE].[ROLES] ([ID_ROL])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_ROL_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]'))
ALTER TABLE [OLA_K_ASE].[ROLES_USUARIOS] CHECK CONSTRAINT [FK_ROL_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_USUARIO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]'))
ALTER TABLE [OLA_K_ASE].[ROLES_USUARIOS]  WITH CHECK ADD  CONSTRAINT [FK_USUARIO_ID] FOREIGN KEY([USUARIO_ID])
REFERENCES [OLA_K_ASE].[USUARIOS] ([ID_USUARIO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_USUARIO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[ROLES_USUARIOS]'))
ALTER TABLE [OLA_K_ASE].[ROLES_USUARIOS] CHECK CONSTRAINT [FK_USUARIO_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_AUTO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES]  WITH CHECK ADD  CONSTRAINT [FK_VIAJES_AUTO_ID] FOREIGN KEY([AUTO_ID])
REFERENCES [OLA_K_ASE].[AUTOS] ([ID_AUTO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_AUTO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] CHECK CONSTRAINT [FK_VIAJES_AUTO_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_CHOFER_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES]  WITH CHECK ADD  CONSTRAINT [FK_VIAJES_CHOFER_ID] FOREIGN KEY([CHOFER_ID])
REFERENCES [OLA_K_ASE].[CHOFERES] ([ID_CHOFER])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_CHOFER_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] CHECK CONSTRAINT [FK_VIAJES_CHOFER_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_CLIENTE_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES]  WITH CHECK ADD  CONSTRAINT [FK_VIAJES_CLIENTE_ID] FOREIGN KEY([CLIENTE_ID])
REFERENCES [OLA_K_ASE].[CLIENTES] ([ID_CLIENTE])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_CLIENTE_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] CHECK CONSTRAINT [FK_VIAJES_CLIENTE_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_FACTURA_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES]  WITH CHECK ADD  CONSTRAINT [FK_VIAJES_FACTURA_ID] FOREIGN KEY([FACTURA_ID])
REFERENCES [OLA_K_ASE].[FACTURAS] ([ID_FACTURA])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_FACTURA_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] CHECK CONSTRAINT [FK_VIAJES_FACTURA_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_RENDICION_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES]  WITH CHECK ADD  CONSTRAINT [FK_VIAJES_RENDICION_ID] FOREIGN KEY([RENDICION_ID])
REFERENCES [OLA_K_ASE].[RENDICIONES] ([ID_RENDICION])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_RENDICION_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] CHECK CONSTRAINT [FK_VIAJES_RENDICION_ID]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_TURNO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES]  WITH CHECK ADD  CONSTRAINT [FK_VIAJES_TURNO_ID] FOREIGN KEY([TURNO_ID])
REFERENCES [OLA_K_ASE].[TURNOS] ([ID_TURNO])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[FK_VIAJES_TURNO_ID]') AND parent_object_id = OBJECT_ID(N'[OLA_K_ASE].[VIAJES]'))
ALTER TABLE [OLA_K_ASE].[VIAJES] CHECK CONSTRAINT [FK_VIAJES_TURNO_ID]
GO

----------------------------------------------------------Creación de la stg---------------------------------------------------------------

USE [GD1C2017]
GO
/****** Object:  Table [OLA_K_ASE].[Maestra_Stg1]    Script Date: 5/13/2017 2:40:50 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[Maestra_Stg1]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[Maestra_Stg1]
GO
/****** Object:  Table [OLA_K_ASE].[Maestra_Stg1]    Script Date: 5/13/2017 2:40:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[Maestra_Stg1]') AND type in (N'U'))
BEGIN
select * into [OLA_K_ASE].[Maestra_Stg1] from [gd_esquema].[Maestra]

alter table [OLA_K_ASE].[Maestra_Stg1] add [MARCA_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [AUTO_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [TURNO_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [CHOFER_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [CLIENTE_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [USUARIO_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [RENDICION_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [FACTURA_ID] [int] NULL
alter table [OLA_K_ASE].[Maestra_Stg1] add [VIAJE_ID] [int] NULL


END
GO
SET ANSI_PADDING OFF
GO

----------------------------------------------------------MIGRACIÓN MARCAS---------------------------------------------------------------

begin

insert into OLA_K_ASE.MARCAS (nombre)
select distinct AUTO_MARCA from gd_esquema.Maestra

declare @cantidad_marcas int
declare @contadorMARCAS int
declare @id_marca int
declare @nombre_marca varchar(50)

set @cantidad_marcas = (select count(*) from OLA_K_ASE.MARCAS)
set @contadorMARCAS = 1

while @contadorMARCAS <= @cantidad_marcas 
begin
set @nombre_marca = (select nombre from OLA_K_ASE.MARCAS where ID_MARCA = @contadorMARCAS)

update OLA_K_ASE.Maestra_Stg1
set MARCA_ID = @contadorMARCAS
where Auto_Marca = @nombre_marca

set @contadorMARCAS = @contadorMARCAS + 1

end

end;

------------------------------------------------------GENERACIÓN ROLES Y FUNCIONALIDADES--------------------------------------------------

insert into OLA_K_ASE.ROLES (NOMBRE, HABILITADO) values ('Administrador', 1)
insert into OLA_K_ASE.ROLES (NOMBRE, HABILITADO) values ('Cliente', 1)
insert into OLA_K_ASE.ROLES (NOMBRE, HABILITADO) values ('Chofer', 1)
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('ABM de Rol')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('Login y Seguridad')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('Registro de Usuario')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('ABM de Cliente')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('ABM de Automóvil')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('ABM de Chofer')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('Registro de Viajes')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('Rendición de cuenta del chofer')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('Facturación a Cliente')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('Listado Estadístico')
insert into OLA_K_ASE.FUNCIONALIDADES (NOMBRE) values ('ABM de Turnos')

----------------------------------------------------------MIGRACIÓN TURNOS---------------------------------------------------------------

begin

insert into OLA_K_ASE.TURNOS(HORA_INICIO, HORA_FIN, DESCRIPCION, VALOR_KM, PRECIO_BASE)
select distinct Turno_Hora_Inicio, Turno_Hora_Fin, Turno_Descripcion, Turno_Valor_Kilometro, Turno_Precio_Base from gd_esquema.Maestra

declare @cantidad_turnos int
declare @contadorTURNOS int
declare @id_turno int
declare @nombre_turno varchar(50)

set @cantidad_turnos = (select count(*) from OLA_K_ASE.TURNOS)
set @contadorTURNOS = 1

while @contadorTURNOS <= @cantidad_turnos
begin
set @nombre_turno = (select DESCRIPCION from OLA_K_ASE.TURNOS where ID_TURNO = @contadorTURNOS)

update OLA_K_ASE.Maestra_Stg1
set TURNO_ID = @contadorTURNOS
where Turno_Descripcion = @nombre_turno

set @contadorTURNOS = @contadorTURNOS + 1

end

end;


----------------------------------------------------------MIGRACIÓN CHOFERES-------------------------------------------------------------

begin

insert into OLA_K_ASE.CHOFERES(NOMBRE, APELLIDO, DNI, DIRECCION, TELEFONO, MAIL, FECHA_NAC)
select distinct Chofer_Nombre, Chofer_Apellido, Chofer_Dni, Chofer_Direccion, Chofer_Telefono, Chofer_Mail, Chofer_Fecha_Nac from gd_esquema.Maestra

declare @cantidad_choferes int
declare @contadorCHOFERES int
declare @id_chofer int
declare @dni_chofer varchar(50)

set @cantidad_choferes = (select count(*) from OLA_K_ASE.CHOFERES)
set @contadorCHOFERES = 1

while @contadorCHOFERES <= @cantidad_choferes
begin
set @dni_chofer = (select DNI from OLA_K_ASE.choferes where ID_CHOFER = @contadorCHOFERES)

update OLA_K_ASE.Maestra_Stg1
set CHOFER_ID = @contadorCHOFERES
where Chofer_Dni = @dni_chofer

set @contadorCHOFERES = @contadorCHOFERES + 1

end

end;

----------------------------------------------------------MIGRACIÓN CLIENTES-------------------------------------------------------------

begin

insert into OLA_K_ASE.CLIENTES(NOMBRE, APELLIDO, DNI, DIRECCION, MAIL, TELEFONO, FECHA_NAC)
select distinct Cliente_Nombre, Cliente_Apellido, Cliente_Dni, Cliente_Direccion, Cliente_Mail, Cliente_Telefono, Cliente_Fecha_Nac from gd_esquema.Maestra

declare @cantidad_clientes int
declare @contadorCLIENTES int
declare @id_cliente int
declare @dni_cliente varchar(50)

set @cantidad_clientes = (select count(*) from OLA_K_ASE.CLIENTES)
set @contadorCLIENTES = 1

while @contadorCLIENTES <= @cantidad_clientes
begin
set @dni_cliente = (select DNI from OLA_K_ASE.clientes where ID_cliente = @contadorCLIENTES)

update OLA_K_ASE.Maestra_Stg1
set CLIENTE_ID = @contadorCLIENTES
where Cliente_Dni = @dni_cliente

set @contadorCLIENTES = @contadorCLIENTES + 1

end

end;

----------------------------------------------------------MIGRACIÓN AUTOS----------------------------------------------------------------
begin

insert into OLA_K_ASE.AUTOS (MARCA_ID, MODELO, PATENTE, LICENCIA, RODADO, CHOFER_ID)
select distinct MARCA_ID, Auto_MODELO, Auto_PATENTE, Auto_LICENCIA, Auto_RODADO, CHOFER_ID from OLA_K_ASE.Maestra_Stg1

declare @cantidad_autos int
declare @contadorAUTOS int
declare @id_auto int
declare @patente_auto varchar(50)

set @cantidad_autos = (select count(*) from OLA_K_ASE.AUTOS)
set @contadorAUTOS = 1

while @contadorAUTOS <= @cantidad_autos
begin
set @patente_auto = (select patente from OLA_K_ASE.AUTOS where ID_AUTO = @contadorAUTOS)

update OLA_K_ASE.Maestra_Stg1
set AUTO_ID = @contadorAUTOS
where Auto_Patente = @patente_auto

set @contadorAUTOS = @contadorAUTOS + 1

end

end;

----------------------------------------------------------MIGRACIÓN AUTOSxTURNOS---------------------------------------------------------
begin

insert into OLA_K_ASE.AUTOS_TURNOS(TURNO_ID, AUTO_ID)
select distinct TURNO_ID, AUTO_ID from OLA_K_ASE.Maestra_Stg1

end;

----------------------------------------------------------MIGRACIÓN USUARIOS-------------------------------------------------------------
----CARGA USUARIOS CON CHOFERES ---

begin

insert into OLA_K_ASE.USUARIOS(NOMBRE, PASSWORD, CANT_FALLAS)
select distinct DNI, HashBytes('SHA2_256',convert(varchar(255), DNI)), 0 from OLA_K_ASE.choferes

declare @cantidad_usuariosCH int
declare @contadorCH int
declare @id_usuarioCH int
declare @nombre_usuarioCH varchar(50)

set @cantidad_usuariosCH = (select count(*) from OLA_K_ASE.USUARIOS)
set @contadorCH = 1

while @contadorCH <= @cantidad_usuariosCH
begin
set @nombre_usuarioCH = (select NOMBRE from OLA_K_ASE.USUARIOS where ID_USUARIO = @contadorCH)

update OLA_K_ASE.CHOFERES
set USUARIO_ID = @contadorCH
where DNI = @nombre_usuarioCH

set @contadorCH = @contadorCH + 1

end

end

--- CARGA USUARIOS CON CLIENTES ---
begin

insert into OLA_K_ASE.USUARIOS(NOMBRE, PASSWORD, CANT_FALLAS)
select distinct DNI,HashBytes('SHA2_256',convert(varchar(255), DNI)), 0 from OLA_K_ASE.clientes

declare @cantidad_usuariosCL int
declare @contadorCL int
declare @id_usuarioCL int
declare @nombre_usuarioCL varchar(50)

set @cantidad_usuariosCL = (select count(*) from OLA_K_ASE.USUARIOS)
set @contadorCL = (select count(*) from OLA_K_ASE.choferes)+1

while @contadorCL <= @cantidad_usuariosCL
begin
set @nombre_usuarioCL = (select NOMBRE from OLA_K_ASE.USUARIOS where ID_USUARIO = @contadorCL)

update OLA_K_ASE.CLIENTES
set USUARIO_ID = @contadorCL
where DNI = @nombre_usuarioCL

set @contadorCL = @contadorCL + 1

end

-- CARGA USUARIO ADMIN

begin
insert into OLA_K_ASE.USUARIOS(NOMBRE, PASSWORD, CANT_FALLAS)
values ('admin', HashBytes('SHA2_256',convert(varchar(255), 'w23e')),0)
end


end;


----------------------------------------------------------MIGRACIÓN ROLESxUSUARIO--------------------------------------------------------

begin

insert into OLA_K_ASE.ROLES_USUARIOS(USUARIO_ID, ROLES_ID)
select USUARIO_ID, 2 from OLA_K_ASE.CLIENTES
union
select usuario_id, 3 from OLA_K_ASE.CHOFERES
union
select ID_USUARIO, 1 from OLA_K_ASE.USUARIOS where nombre = 'admin'
end;

----------------------------------------------------------MIGRACIÓN RENDICIONES----------------------------------------------------------
begin

insert into OLA_K_ASE.RENDICIONES(TURNO_ID, NUMERO, FECHA, IMPORTE, CHOFER_ID)
select turno_id , rendicion_nro, rendicion_fecha, sum(rendicion_importe), chofer_id
from OLA_K_ASE.Maestra_stg1 where rendicion_nro is not null
group by chofer_id, turno_id, Rendicion_Nro, Rendicion_Fecha


update OLA_K_ASE.Maestra_stg1 
SET
	OLA_K_ASE.Maestra_stg1.RENDICION_ID = OLA_K_ASE.RENDICIONES.ID_RENDICION

from OLA_K_ASE.Maestra_stg1 
	inner join OLA_K_ASE.RENDICIONES
		on OLA_K_ASE.Maestra_stg1.TURNO_ID = OLA_K_ASE.RENDICIONES.TURNO_ID and
		OLA_K_ASE.Maestra_stg1.Rendicion_Nro = OLA_K_ASE.RENDICIONES.NUMERO and
		OLA_K_ASE.Maestra_stg1.Rendicion_Fecha = OLA_K_ASE.RENDICIONES.FECHA and
		OLA_K_ASE.Maestra_stg1.Chofer_ID = OLA_K_ASE.RENDICIONES.CHOFER_ID
end

----------------------------------------------------------MIGRACIÓN FACTURAS-------------------------------------------------------------

begin

insert into OLA_K_ASE.FACTURAS(CLIENTE_ID, NUMERO, FECHA_FACT, FECHA_INICIO, FECHA_FIN, IMPORTE)
select Cliente_ID, Factura_Nro, Factura_Fecha, Factura_Fecha_Inicio, Factura_Fecha_Fin,
	sum(Turno_Precio_Base + Viaje_Cant_Kilometros*Turno_Valor_Kilometro) as Importe_Viaje
from OLA_K_ASE.Maestra_Stg1
where Factura_Nro is not null
group by Cliente_ID, Factura_Nro, Factura_Fecha, Factura_Fecha_Inicio, Factura_Fecha_Fin


update OLA_K_ASE.Maestra_stg1 
SET
	OLA_K_ASE.Maestra_stg1.FACTURA_ID = OLA_K_ASE.FACTURAS.ID_FACTURA

from OLA_K_ASE.Maestra_stg1 
	inner join OLA_K_ASE.FACTURAS
		on OLA_K_ASE.Maestra_stg1.CLIENTE_ID = OLA_K_ASE.FACTURAS.CLIENTE_ID and
		OLA_K_ASE.Maestra_stg1.Factura_Fecha_Inicio = OLA_K_ASE.FACTURAS.FECHA_INICIO and
		OLA_K_ASE.Maestra_stg1.Factura_Fecha_Fin = OLA_K_ASE.FACTURAS.FECHA_FIN and
		OLA_K_ASE.Maestra_stg1.Factura_Fecha = OLA_K_ASE.FACTURAS.FECHA_FACT and
		OLA_K_ASE.Maestra_stg1.Factura_Nro = OLA_K_ASE.FACTURAS.NUMERO
end

----------------------------------------------------------MIGRACIÓN VIAJES---------------------------------------------------------------


begin

insert into OLA_K_ASE.VIAJES(FECHA_INICIO, CANTIDAD_KM, CHOFER_ID, CLIENTE_ID, AUTO_ID, TURNO_ID, RENDICION_ID, FACTURA_ID)
select Viaje_Fecha, Viaje_Cant_Kilometros, CHOFER_ID, CLIENTE_ID, AUTO_ID, TURNO_ID, RENDICION_ID, FACTURA_ID  from OLA_K_ASE.Maestra_Stg1

end

------------ STORED PROCEDURES
--clientesMismoAutomovilMasFrecuenciaSP
USE [GD1C2017]
GO
create PROCEDURE OLA_K_ASE.clientesMismoAutomovilMasFrecuenciaSP @Anio integer = Null, @Inicio integer = Null, @Fin integer = Null
as
begin
select top 5 cli.nombre, cli.apellido, vi.AUTO_ID, au.PATENTE, count(vi.ID_VIAJE) as cantidad_viajes 
from OLA_K_ASE.viajes vi
left join OLA_K_ASE.CLIENTES cli on cli.ID_CLIENTE= vi.CLIENTE_ID
left join ola_K_ase.AUTOS au on au.ID_AUTO = vi.AUTO_ID
where year(vi.FECHA_INICIO) = @Anio and month(vi.FECHA_INICIO) between @Inicio and @Fin 
group by cli.nombre, cli.apellido, vi.AUTO_ID, au.PATENTE 
order by count(vi.ID_VIAJE) desc
end
go

--clientesMayorConsumoSP
USE [GD1C2017]
GO
CREATE PROCEDURE OLA_K_ASE.clientesMayorConsumoSP @Anio integer = Null, @Inicio integer = Null, @Fin integer = Null
as
begin
select top 5 year(fac.FECHA_FACT) as anio, month(fac.FECHA_FACT) as mes, cli.nombre, cli.apellido, sum(fac.importe) as consumo
from ola_k_ase.FACTURAS fac
left join OLA_K_ASE.CLIENTES cli on cli.ID_CLIENTE= fac.CLIENTE_ID
where year(fac.FECHA_FACT) = @Anio and month(fac.FECHA_FACT) between @Inicio and @Fin 
group by fac.FECHA_FACT, cli.nombre, cli.apellido 
order by sum(fac.importe) desc
end
go

--ChoferesViajeMasLargoSP
USE [GD1C2017]
GO
CREATE PROCEDURE OLA_K_ASE.choferesViajeMasLargoSP @Anio integer = Null, @Inicio integer = Null, @Fin integer = Null
as
begin
select top 5 year(vi.FECHA_INICIO) as anio , month(vi.FECHA_INICIO) as mes, chof.NOMBRE, 
CHOF.APELLIDO, DATEDIFF(minute,vi.FECHA_INICIO,isnull(vi.FECHA_FIN,0)) as DURACION_VIAJE
from ola_k_ase.viajes vi
left join ola_k_ase.choferes chof on vi.CHOFER_ID= chof.ID_CHOFER
where year(vi.FECHA_INICIO) = @Anio and month(vi.FECHA_INICIO) between @Inicio and @Fin
group by vi.FECHA_INICIO, vi.fecha_fin, chof.NOMBRE, CHOF.APELLIDO 
order by DATEDIFF(minute,vi.FECHA_INICIO,isnull(vi.FECHA_FIN,0)) desc
end
GO

--ChoferesMayorRecaudacionSP
USE [GD1C2017]
GO
CREATE PROCEDURE OLA_K_ASE.choferesMayorRecaudacionSP @Anio integer = Null, @Inicio integer = Null, @Fin integer = Null
as
begin
select top 5 year(ren.fecha) as anio , month(ren.fecha) as mes, chof.NOMBRE, CHOF.APELLIDO,  sum(ren.importe) as RECAUDACION from ola_k_ase.RENDICIONES ren
left join ola_k_ase.choferes chof on ren.CHOFER_ID= chof.ID_CHOFER
where year(ren.FECHA) = @Anio and month(ren.FECHA) between @Inicio and @Fin 
group by ren.fecha,chof.NOMBRE, CHOF.APELLIDO order by sum(ren.importe) desc
end
GO

-- elimino la tabla del Stage

USE [GD1C2017]
GO
Begin

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[OLA_K_ASE].[Maestra_Stg1]') AND type in (N'U'))
DROP TABLE [OLA_K_ASE].[Maestra_Stg1]

end
GO

-- Asignacion de Roles y funcionalidades

USE [GD1C2017]
GO
Begin
--admin
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (1,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (3,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (4,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (5,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (6,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (7,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (8,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (9,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (10,1)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (11,1)

-- chofer
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (5,3)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (6,3)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (7,3)

-- cliente
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (7,2)
insert into OLA_K_ASE.FUNCIONALIDADES_ROLES values (4,2)

end
GO
